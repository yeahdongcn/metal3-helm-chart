apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.ironic.namespace }}
---
apiVersion: v1
data:
  CACHEURL: {{ .Values.CACHEURL }}
  DEPLOY_KERNEL_URL: {{ .Values.DEPLOY_KERNEL_URL }}
  DEPLOY_RAMDISK_URL: {{ .Values.DEPLOY_RAMDISK_URL }}
  DHCP_RANGE: {{ .Values.DHCP_RANGE }}
  HTTP_PORT: {{ .Values.HTTP_PORT | quote }}
  INSPECTOR_REVERSE_PROXY_SETUP: {{ .Values.INSPECTOR_REVERSE_PROXY_SETUP | quote }}
  IRONIC_ENDPOINT: {{ .Values.IRONIC_ENDPOINT }}
  IRONIC_FAST_TRACK: {{ .Values.IRONIC_FAST_TRACK | quote }}
  IRONIC_INSPECTOR_ENDPOINT: {{ .Values.IRONIC_INSPECTOR_ENDPOINT }}
  IRONIC_INSPECTOR_VLAN_INTERFACES: {{ .Values.IRONIC_INSPECTOR_VLAN_INTERFACES }}
  IRONIC_KERNEL_PARAMS: {{ .Values.IRONIC_KERNEL_PARAMS }}
  PROVISIONING_INTERFACE: {{ .Values.PROVISIONING_INTERFACE }}
  RESTART_CONTAINER_CERTIFICATE_UPDATED: {{ .Values.RESTART_CONTAINER_CERTIFICATE_UPDATED | quote }}
kind: ConfigMap
metadata:
  name: {{ .Values.ironic.config }}
  namespace: {{ .Values.ironic.namespace }}
---
apiVersion: v1
data:
  password: Y2hhbmdlbWU=
kind: Secret
metadata:
  name: mariadb-password-ftkgc8tmkc
  namespace: {{ .Values.ironic.namespace }}
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capm3-ironic
  namespace: {{ .Values.ironic.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: capm3-ironic
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: capm3-ironic
    spec:
      containers:
      - command:
        - /bin/rundnsmasq
        envFrom:
        - configMapRef:
            name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: ironic-dnsmasq
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runmariadb
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mariadb-password-ftkgc8tmkc
        - name: RESTART_CONTAINER_CERTIFICATE_UPDATED
          valueFrom:
            configMapKeyRef:
              key: RESTART_CONTAINER_CERTIFICATE_UPDATED
              name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: mariadb
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runironic-api
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mariadb-password-ftkgc8tmkc
        envFrom:
        - configMapRef:
            name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: ironic-api
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runironic-conductor
        env:
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: mariadb-password-ftkgc8tmkc
        envFrom:
        - configMapRef:
            name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: ironic-conductor
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runlogwatch.sh
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: ironic-log-watch
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      - command:
        - /bin/runironic-inspector
        envFrom:
        - configMapRef:
            name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.default }}
        imagePullPolicy: Always
        name: ironic-inspector
      hostNetwork: true
      initContainers:
      - command:
        - /usr/local/bin/get-resource.sh
        envFrom:
        - configMapRef:
            name: {{ .Values.ironic.config }}
        image: {{ .Values.ironic.images.ipa_downloader }}
        imagePullPolicy: Always
        name: ironic-ipa-downloader
        volumeMounts:
        - mountPath: /shared
          name: ironic-data-volume
      volumes:
      - emptyDir: {}
        name: ironic-data-volume
